{
  _events: {
    close: undefined,
    error: undefined,
    data: undefined,
    end: undefined,
    readable: undefined,
    aborted: undefined
    },
  _readableState: ReadableState {
    highWaterMark: 16384,
    buffer: [],
    bufferIndex: 0,
    length: 0,
    pipes: [],
    awaitDrainWriters: null,
        [Symbol(kState)
        ]: 60036988
    },
  _maxListeners: undefined,
  socket: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _events: {
      close: [Array
            ],
      error: [Array
            ],
      prefinish: undefined,
      finish: undefined,
      drain: [Function: bound socketOnDrain
            ],
      data: [Function: bound socketOnData
            ],
      end: [Array
            ],
      readable: undefined,
      timeout: [Function: socketOnTimeout
            ],
      resume: [Function: onSocketResume
            ],
      pause: [Function: onSocketPause
            ]
        },
    _readableState: ReadableState {
      highWaterMark: 16384,
      buffer: [],
      bufferIndex: 0,
      length: 0,
      pipes: [],
      awaitDrainWriters: null,
            [Symbol(kState)
            ]: 193997060
        },
    _writableState: WritableState {
      highWaterMark: 16384,
      length: 0,
      corked: 0,
      onwrite: [Function: bound onwrite
            ],
      writelen: 0,
      bufferedIndex: 0,
      pendingcb: 0,
            [Symbol(kState)
            ]: 17564420,
            [Symbol(kBufferedValue)
            ]: null
        },
    allowHalfOpen: true,
    _maxListeners: undefined,
    _eventsCount: 8,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      requireHostHeader: true,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype
            ],
      _eventsCount: 3,
      _maxListeners: undefined,
      _connections: 4,
      _handle: [TCP
            ],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      _listeningId: 2,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 16384,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6: : : : 4000',
            [Symbol(IncomingMessage)
            ]: [Function: IncomingMessage
            ],
            [Symbol(ServerResponse)
            ]: [Function: ServerResponse
            ],
            [Symbol(shapeMode)
            ]: false,
            [Symbol(kCapture)
            ]: false,
            [Symbol(async_id_symbol)
            ]: 224,
            [Symbol(kUniqueHeaders)
            ]: null,
            [Symbol(http.server.connections)
            ]: ConnectionsList {},
            [Symbol(http.server.connectionsCheckingInterval)
            ]: Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList
                ],
        _idleNext: [TimersList
                ],
        _idleStart: 3148,
        _onTimeout: [Function: bound checkConnections
                ],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
                [Symbol(refed)
                ]: false,
                [Symbol(kHasPrimitive)
                ]: false,
                [Symbol(asyncId)
                ]: 230,
                [Symbol(triggerId)
                ]: 225
            }
        },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      requireHostHeader: true,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype
            ],
      _eventsCount: 3,
      _maxListeners: undefined,
      _connections: 4,
      _handle: [TCP
            ],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      _listeningId: 2,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 16384,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6: : : : 4000',
            [Symbol(IncomingMessage)
            ]: [Function: IncomingMessage
            ],
            [Symbol(ServerResponse)
            ]: [Function: ServerResponse
            ],
            [Symbol(shapeMode)
            ]: false,
            [Symbol(kCapture)
            ]: false,
            [Symbol(async_id_symbol)
            ]: 224,
            [Symbol(kUniqueHeaders)
            ]: null,
            [Symbol(http.server.connections)
            ]: ConnectionsList {},
            [Symbol(http.server.connectionsCheckingInterval)
            ]: Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList
                ],
        _idleNext: [TimersList
                ],
        _idleStart: 3148,
        _onTimeout: [Function: bound checkConnections
                ],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
                [Symbol(refed)
                ]: false,
                [Symbol(kHasPrimitive)
                ]: false,
                [Symbol(asyncId)
                ]: 230,
                [Symbol(triggerId)
                ]: 225
            }
        },
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders
            ],
      '2': [Function: parserOnHeadersComplete
            ],
      '3': [Function: parserOnBody
            ],
      '4': [Function: parserOnMessageComplete
            ],
      '5': [Function: bound onParserExecute
            ],
      '6': [Function: bound onParserTimeout
            ],
      _headers: [],
      _url: '',
      socket: [Circular *1
            ],
      incoming: [Circular *2
            ],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming
            ],
      joinDuplicateHeaders: null,
            [Symbol(resource_symbol)
            ]: [HTTPServerAsyncResource
            ]
        },
    on: [Function: socketListenerWrap
        ],
    addListener: [Function: socketListenerWrap
        ],
    prependListener: [Function: socketListenerWrap
        ],
    setEncoding: [Function: socketSetEncoding
        ],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype
            ],
      _eventsCount: 2,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData
            ],
      req: [Circular *2
            ],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype
            ] {},
      _startAt: undefined,
      _startTime: undefined,
      writeHead: [Function: writeHead
            ],
      __onFinished: [Function
            ],
      end: [Function: end
            ],
            [Symbol(shapeMode)
            ]: false,
            [Symbol(kCapture)
            ]: false,
            [Symbol(kBytesWritten)
            ]: 0,
            [Symbol(kNeedDrain)
            ]: false,
            [Symbol(corked)
            ]: 0,
            [Symbol(kChunkedBuffer)
            ]: [],
            [Symbol(kChunkedLength)
            ]: 0,
            [Symbol(kSocket)
            ]: [Circular *1
            ],
            [Symbol(kOutHeaders)
            ]: [Object: null prototype
            ],
            [Symbol(errored)
            ]: null,
            [Symbol(kHighWaterMark)
            ]: 16384,
            [Symbol(kRejectNonStandardBodyWrites)
            ]: false,
            [Symbol(kUniqueHeaders)
            ]: null
        },
    _peername: { address: ': :ffff: 127.0.0.1', family: 'IPv6', port: 59596
        },
        [Symbol(async_id_symbol)
        ]: 412,
        [Symbol(kHandle)
        ]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
            [Symbol(owner_symbol)
            ]: [Circular *1
            ]
        },
        [Symbol(lastWriteQueueSize)
        ]: 0,
        [Symbol(timeout)
        ]: null,
        [Symbol(kBuffer)
        ]: null,
        [Symbol(kBufferCb)
        ]: null,
        [Symbol(kBufferGen)
        ]: null,
        [Symbol(shapeMode)
        ]: true,
        [Symbol(kCapture)
        ]: false,
        [Symbol(kSetNoDelay)
        ]: true,
        [Symbol(kSetKeepAlive)
        ]: false,
        [Symbol(kSetKeepAliveInitialDelay)
        ]: 0,
        [Symbol(kBytesRead)
        ]: 0,
        [Symbol(kBytesWritten)
        ]: 0
    },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  rawHeaders: [
    'Accept',
    'application/json',
    'Host',
    'localhost: 4000',
    'User-Agent',
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36',
    'Accept-Encoding',
    'gzip, deflate, br, zstd',
    'Accept-Language',
    'en-US,en;q=0.9,es;q=0.8',
    'Origin',
    'http: //localhost:5173',
    'Referer',
    'http: //localhost:5173/',
    'X-Request-ID',
    '3dd3de179d9629af527fa155c1ee2ae9',
    'X-Real-IP',
    '10.240.0.10',
    'X-Forwarded-Port',
    '443',
    'X-Forwarded-Scheme',
    'https',
    'X-Original-URI',
    '/profile',
    'X-Scheme',
    'https',
    'sec-ch-ua',
    '"Not/A)Brand";v="8",
        "Chromium";v="126",
        "Google Chrome";v="126"',
    'sec-ch-ua-mobile',
    '?0',
    'sec-ch-ua-platform',
    '"Windows"',
    'sec-fetch-site',
    'cross-site',
    'sec-fetch-mode',
    'cors',
    'sec-fetch-dest',
    'empty',
    'priority',
    'u=1, i',
    'X-Original-Proto',
    'https',
    'X-Forwarded-Proto',
    'https',
    'X-Forwarded-Host',
    '1gt9jcx5-4000.use2.devtunnels.ms',
    'X-Forwarded-For',
    '10.240.0.10',
    'Proxy-Connection',
    'Keep-Alive',
    'Content-Type',
    'application/json',
    'Content-Length',
    '0'
    ],
  rawTrailers: [],
  joinDuplicateHeaders: null,
  aborted: false,
  upgrade: false,
  url: '/profile',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _events: {
      close: [Array
            ],
      error: [Array
            ],
      prefinish: undefined,
      finish: undefined,
      drain: [Function: bound socketOnDrain
            ],
      data: [Function: bound socketOnData
            ],
      end: [Array
            ],
      readable: undefined,
      timeout: [Function: socketOnTimeout
            ],
      resume: [Function: onSocketResume
            ],
      pause: [Function: onSocketPause
            ]
        },
    _readableState: ReadableState {
      highWaterMark: 16384,
      buffer: [],
      bufferIndex: 0,
      length: 0,
      pipes: [],
      awaitDrainWriters: null,
            [Symbol(kState)
            ]: 193997060
        },
    _writableState: WritableState {
      highWaterMark: 16384,
      length: 0,
      corked: 0,
      onwrite: [Function: bound onwrite
            ],
      writelen: 0,
      bufferedIndex: 0,
      pendingcb: 0,
            [Symbol(kState)
            ]: 17564420,
            [Symbol(kBufferedValue)
            ]: null
        },
    allowHalfOpen: true,
    _maxListeners: undefined,
    _eventsCount: 8,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      requireHostHeader: true,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype
            ],
      _eventsCount: 3,
      _maxListeners: undefined,
      _connections: 4,
      _handle: [TCP
            ],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      _listeningId: 2,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 16384,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6: : : : 4000',
            [Symbol(IncomingMessage)
            ]: [Function: IncomingMessage
            ],
            [Symbol(ServerResponse)
            ]: [Function: ServerResponse
            ],
            [Symbol(shapeMode)
            ]: false,
            [Symbol(kCapture)
            ]: false,
            [Symbol(async_id_symbol)
            ]: 224,
            [Symbol(kUniqueHeaders)
            ]: null,
            [Symbol(http.server.connections)
            ]: ConnectionsList {},
            [Symbol(http.server.connectionsCheckingInterval)
            ]: Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList
                ],
        _idleNext: [TimersList
                ],
        _idleStart: 3148,
        _onTimeout: [Function: bound checkConnections
                ],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
                [Symbol(refed)
                ]: false,
                [Symbol(kHasPrimitive)
                ]: false,
                [Symbol(asyncId)
                ]: 230,
                [Symbol(triggerId)
                ]: 225
            }
        },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      requireHostHeader: true,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype
            ],
      _eventsCount: 3,
      _maxListeners: undefined,
      _connections: 4,
      _handle: [TCP
            ],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      _listeningId: 2,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 16384,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6: : : : 4000',
            [Symbol(IncomingMessage)
            ]: [Function: IncomingMessage
            ],
            [Symbol(ServerResponse)
            ]: [Function: ServerResponse
            ],
            [Symbol(shapeMode)
            ]: false,
            [Symbol(kCapture)
            ]: false,
            [Symbol(async_id_symbol)
            ]: 224,
            [Symbol(kUniqueHeaders)
            ]: null,
            [Symbol(http.server.connections)
            ]: ConnectionsList {},
            [Symbol(http.server.connectionsCheckingInterval)
            ]: Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList
                ],
        _idleNext: [TimersList
                ],
        _idleStart: 3148,
        _onTimeout: [Function: bound checkConnections
                ],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
                [Symbol(refed)
                ]: false,
                [Symbol(kHasPrimitive)
                ]: false,
                [Symbol(asyncId)
                ]: 230,
                [Symbol(triggerId)
                ]: 225
            }
        },
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders
            ],
      '2': [Function: parserOnHeadersComplete
            ],
      '3': [Function: parserOnBody
            ],
      '4': [Function: parserOnMessageComplete
            ],
      '5': [Function: bound onParserExecute
            ],
      '6': [Function: bound onParserTimeout
            ],
      _headers: [],
      _url: '',
      socket: [Circular *1
            ],
      incoming: [Circular *2
            ],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming
            ],
      joinDuplicateHeaders: null,
            [Symbol(resource_symbol)
            ]: [HTTPServerAsyncResource
            ]
        },
    on: [Function: socketListenerWrap
        ],
    addListener: [Function: socketListenerWrap
        ],
    prependListener: [Function: socketListenerWrap
        ],
    setEncoding: [Function: socketSetEncoding
        ],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype
            ],
      _eventsCount: 2,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData
            ],
      req: [Circular *2
            ],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype
            ] {},
      _startAt: undefined,
      _startTime: undefined,
      writeHead: [Function: writeHead
            ],
      __onFinished: [Function
            ],
      end: [Function: end
            ],
            [Symbol(shapeMode)
            ]: false,
            [Symbol(kCapture)
            ]: false,
            [Symbol(kBytesWritten)
            ]: 0,
            [Symbol(kNeedDrain)
            ]: false,
            [Symbol(corked)
            ]: 0,
            [Symbol(kChunkedBuffer)
            ]: [],
            [Symbol(kChunkedLength)
            ]: 0,
            [Symbol(kSocket)
            ]: [Circular *1
            ],
            [Symbol(kOutHeaders)
            ]: [Object: null prototype
            ],
            [Symbol(errored)
            ]: null,
            [Symbol(kHighWaterMark)
            ]: 16384,
            [Symbol(kRejectNonStandardBodyWrites)
            ]: false,
            [Symbol(kUniqueHeaders)
            ]: null
        },
    _peername: { address: ': :ffff: 127.0.0.1', family: 'IPv6', port: 59596
        },
        [Symbol(async_id_symbol)
        ]: 412,
        [Symbol(kHandle)
        ]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
            [Symbol(owner_symbol)
            ]: [Circular *1
            ]
        },
        [Symbol(lastWriteQueueSize)
        ]: 0,
        [Symbol(timeout)
        ]: null,
        [Symbol(kBuffer)
        ]: null,
        [Symbol(kBufferCb)
        ]: null,
        [Symbol(kBufferGen)
        ]: null,
        [Symbol(shapeMode)
        ]: true,
        [Symbol(kCapture)
        ]: false,
        [Symbol(kSetNoDelay)
        ]: true,
        [Symbol(kSetKeepAlive)
        ]: false,
        [Symbol(kSetKeepAliveInitialDelay)
        ]: 0,
        [Symbol(kBytesRead)
        ]: 0,
        [Symbol(kBytesWritten)
        ]: 0
    },
  _consuming: false,
  _dumped: false,
  next: [Function: next
    ],
  baseUrl: '',
  originalUrl: '/profile',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/profile',
    path: '/profile',
    href: '/profile',
    _raw: '/profile'
    },
  params: {},
  query: {},
  res: <ref *3> ServerResponse {
    _events: [Object: null prototype
        ] {
      finish: [Array
            ],
      end: [Function: onevent
            ]
        },
    _eventsCount: 2,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData
        ],
    req: [Circular *2
        ],
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype
        ] {},
    _startAt: undefined,
    _startTime: undefined,
    writeHead: [Function: writeHead
        ],
    __onFinished: [Function: listener
        ] { queue: [Array
            ]
        },
    end: [Function: end
        ],
        [Symbol(shapeMode)
        ]: false,
        [Symbol(kCapture)
        ]: false,
        [Symbol(kBytesWritten)
        ]: 0,
        [Symbol(kNeedDrain)
        ]: false,
        [Symbol(corked)
        ]: 0,
        [Symbol(kChunkedBuffer)
        ]: [],
        [Symbol(kChunkedLength)
        ]: 0,
        [Symbol(kSocket)
        ]: <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: [Object
            ],
      _readableState: [ReadableState
            ],
      _writableState: [WritableState
            ],
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server
            ],
      _server: [Server
            ],
      parser: [HTTPParser
            ],
      on: [Function: socketListenerWrap
            ],
      addListener: [Function: socketListenerWrap
            ],
      prependListener: [Function: socketListenerWrap
            ],
      setEncoding: [Function: socketSetEncoding
            ],
      _paused: false,
      _httpMessage: [Circular *3
            ],
      _peername: [Object
            ],
            [Symbol(async_id_symbol)
            ]: 412,
            [Symbol(kHandle)
            ]: [TCP
            ],
            [Symbol(lastWriteQueueSize)
            ]: 0,
            [Symbol(timeout)
            ]: null,
            [Symbol(kBuffer)
            ]: null,
            [Symbol(kBufferCb)
            ]: null,
            [Symbol(kBufferGen)
            ]: null,
            [Symbol(shapeMode)
            ]: true,
            [Symbol(kCapture)
            ]: false,
            [Symbol(kSetNoDelay)
            ]: true,
            [Symbol(kSetKeepAlive)
            ]: false,
            [Symbol(kSetKeepAliveInitialDelay)
            ]: 0,
            [Symbol(kBytesRead)
            ]: 0,
            [Symbol(kBytesWritten)
            ]: 0
        },
        [Symbol(kOutHeaders)
        ]: [Object: null prototype
        ] {
      'x-powered-by': [Array
            ],
      'access-control-allow-origin': [Array
            ],
      vary: [Array
            ],
      'access-control-allow-credentials': [Array
            ]
        },
        [Symbol(errored)
        ]: null,
        [Symbol(kHighWaterMark)
        ]: 16384,
        [Symbol(kRejectNonStandardBodyWrites)
        ]: false,
        [Symbol(kUniqueHeaders)
        ]: null
    },
  _startAt: [
        177228,
        355964900
    ],
  _startTime: 2024-07-17T23: 23: 38.734Z,
  _remoteAddress: ': :ffff: 127.0.0.1',
  body: {},
  _body: true,
  length: undefined,
  _eventsCount: 0,
  secret: undefined,
  cookies: [Object: null prototype
    ] {},
  signedCookies: [Object: null prototype
    ] {},
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/profile',
    path: '/profile',
    href: '/profile',
    _raw: '/profile'
    },
  sessionStore: MemoryStore {
    _events: [Object: null prototype
        ] {
      disconnect: [Function: ondisconnect
            ],
      connect: [Function: onconnect
            ]
        },
    _eventsCount: 2,
    _maxListeners: undefined,
    sessions: [Object: null prototype
        ] {
      'hDtYxl-REm-Hqkgli7niJyfad93u873T': '{
                "cookie": {
                    "originalMaxAge": 86400000,
                    "expires": "2024-07-18T23:23:37.437Z",
                    "httpOnly": true,
                    "path": "/"
                },
                "passport": {
                    "user": {
                        "id": "102320044657593677757",
                        "displayName": "Mario Salazar",
                        "name": {
                            "familyName": "Salazar",
                            "givenName": "Mario"
                        },
                        "emails": [
                            {
                                "value": "mariosalazar.ms.10@gmail.com",
                                "verified": true
                            }
                        ],
                        "photos": [
                            {
                                "value": "https://lh3.googleusercontent.com/a/ACg8ocJJwqIMs67ZUujKQCqdGGrRe6jqAFs5w5HpEaRTVJtLu5RMn4k2=s96-c"
                            }
                        ],
                        "provider": "google",
                        "_raw": "{\\n  \\"sub\\": \\"102320044657593677757\\",\\n  \\"name\\": \\"Mario Salazar\\",\\n  \\"given_name\\": \\"Mario\\",\\n  \\"family_name\\": \\"Salazar\\",\\n  \\"picture\\": \\"https: //lh3.googleusercontent.com/a/ACg8ocJJwqIMs67ZUujKQCqdGGrRe6jqAFs5w5HpEaRTVJtLu5RMn4k2\\\\u003ds96-c\\",\\n  \\"email\\": \\"mariosalazar.ms.10@gmail.com\\",\\n  \\"email_verified\\": true\\n}","_json":{"sub":"102320044657593677757","name":"Mario Salazar","given_name":"Mario","family_name":"Salazar","picture":"https://lh3.googleusercontent.com/a/ACg8ocJJwqIMs67ZUujKQCqdGGrRe6jqAFs5w5HpEaRTVJtLu5RMn4k2=s96-c","email":"mariosalazar.ms.10@gmail.com","email_verified":true}}}}'
                    },
    generate: [Function (anonymous)
                    ],
                    [Symbol(shapeMode)
                    ]: false,
                    [Symbol(kCapture)
                    ]: false
                },
  sessionID: '8F59eUVkQYb6q-kX4oLkR6jlOF5K7SNO',
  session: Session {
    cookie: {
      path: '/',
      _expires: 2024-07-18T23: 23: 38.782Z,
      originalMaxAge: 86400000,
      httpOnly: true
                    }
                },
  logIn: [Function (anonymous)
                ],
  login: [Function (anonymous)
                ],
  logOut: [Function (anonymous)
                ],
  logout: [Function (anonymous)
                ],
  isAuthenticated: [Function (anonymous)
                ],
  isUnauthenticated: [Function (anonymous)
                ],
  _sessionManager: SessionManager {
    _key: 'passport',
    _serializeUser: [Function: bound
                    ]
                },
  _passport: {
    instance: Authenticator {
      _key: 'passport',
      _strategies: [Object
                        ],
      _serializers: [Array
                        ],
      _deserializers: [Array
                        ],
      _infoTransformers: [],
      _framework: [Object
                        ],
      _sm: [SessionManager
                        ],
      Authenticator: [Function: Authenticator
                        ],
      Passport: [Function: Authenticator
                        ],
      Strategy: [Function
                        ],
      strategies: [Object
                        ],
      _userProperty: 'user'
                    }
                },
  route: Route {
    path: '/profile',
    stack: [
                        [Layer
                        ],
                        [Layer
                        ]
                    ],
    methods: { get: true
                    }
                },
                [Symbol(shapeMode)
                ]: true,
                [Symbol(kCapture)
                ]: false,
                [Symbol(kHeaders)
                ]: {
    accept: 'application/json',
    host: 'localhost: 4000',
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9,es;q=0.8',
    origin: 'http: //localhost:5173',
    referer: 'http: //localhost:5173/',
    'x-request-id': '3dd3de179d9629af527fa155c1ee2ae9',
    'x-real-ip': '10.240.0.10',
    'x-forwarded-port': '443',
    'x-forwarded-scheme': 'https',
    'x-original-uri': '/profile',
    'x-scheme': 'https',
    'sec-ch-ua': '"Not/A)Brand";v="8",
                    "Chromium";v="126",
                    "Google Chrome";v="126"',
    'sec-ch-ua-mobile': '?0',
    'sec-ch-ua-platform': '"Windows"',
    'sec-fetch-site': 'cross-site',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    priority: 'u=1, i',
    'x-original-proto': 'https',
    'x-forwarded-proto': 'https',
    'x-forwarded-host': '1gt9jcx5-4000.use2.devtunnels.ms',
    'sec-ch-ua-platform': '"Windows"',
    'sec-fetch-site': 'cross-site',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    priority: 'u=1, i',
    'x-original-proto': 'https',
    'x-forwarded-proto': 'https',
    'x-forwarded-host': '1gt9jcx5-4000.use2.devtunnels.ms',
    'x-forwarded-for': '10.240.0.10',
    'proxy-connection': 'Keep-Alive',
    'content-type': 'application/json',
    'content-length': '0'
                },
                [Symbol(kHeadersCount)
                ]: 54,
                [Symbol(kTrailers)
                ]: null,
                [Symbol(kTrailersCount)
                ]: 0
            }
    'sec-ch-ua-platform': '"Windows"',
    'sec-fetch-site': 'cross-site',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    priority: 'u=1, i',
    'x-original-proto': 'https',
    'x-forwarded-proto': 'https',
    'x-forwarded-host': '1gt9jcx5-4000.use2.devtunnels.ms',
    'x-forwarded-for': '10.240.0.10',
    'proxy-connection': 'Keep-Alive',
    'content-type': 'application/json',
    'content-length': '0'
    'sec-fetch-site': 'cross-site',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    priority: 'u=1, i',
    'x-original-proto': 'https',
    'x-forwarded-proto': 'https',
    'x-forwarded-host': '1gt9jcx5-4000.use2.devtunnels.ms',
    'x-original-proto': 'https',
    'x-forwarded-proto': 'https',
    'x-forwarded-host': '1gt9jcx5-4000.use2.devtunnels.ms',
    'x-forwarded-host': '1gt9jcx5-4000.use2.devtunnels.ms',
    'x-forwarded-for': '10.240.0.10',
    'proxy-connection': 'Keep-Alive',
    'content-type': 'application/json',
    'content-length': '0'
        },
        [Symbol(kHeadersCount)
        ]: 54,
        [Symbol(kTrailers)
        ]: null,
        [Symbol(kTrailersCount)
        ]: 0
    }